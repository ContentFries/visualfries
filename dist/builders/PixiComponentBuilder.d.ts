import type { IComponent, IComponentBuilder, IComponentHook as ComponentHook } from '..';
import { Component } from '../components/Component.svelte.js';
type PixiComponentCradle = {
    component: Component;
    mediaHook: ComponentHook;
    verifyMediaHook: ComponentHook;
    imageHook: ComponentHook;
    verifyImageHook: ComponentHook;
    verifyGifHook: ComponentHook;
    videoTextureHook: ComponentHook;
    splitScreenHook: ComponentHook;
    htmlTextHook: ComponentHook;
    htmlAnimationHook: ComponentHook;
    animationHook: ComponentHook;
    subtitlesHook: ComponentHook;
    textureHook: ComponentHook;
    objectHook: ComponentHook;
    gifHook: ComponentHook;
    canvasShapeHook: ComponentHook;
    pixiProgressShapeHook: ComponentHook;
    htmlToCanvasHook: ComponentHook;
    mediaSeekingHook: ComponentHook;
};
export declare class PixiComponentBuilder implements IComponentBuilder {
    private component;
    private mediaHook;
    private verifyMediaHook;
    private imageHook;
    private verifyImageHook;
    private verifyGifHook;
    private videoTextureHook;
    private splitScreenHook;
    private htmlTextHook;
    private htmlAnimationHook;
    private subtitlesHook;
    private textureHook;
    private objectHook;
    private gifHook;
    private canvasShapeHook;
    private pixiProgressShapeHook;
    private htmlToCanvasHook;
    private animationHook;
    private mediaSeekingHook;
    constructor(cradle: PixiComponentCradle);
    withCanvasShape(): this;
    withProgressShape(): this;
    withMedia(): this;
    withMediaSeeking(): this;
    withImage(): this;
    withTexture(): this;
    withDisplayObject(): this;
    withVideoTexture(): this;
    withSplitScreen(): this;
    withHtmlText(): this;
    withAnimation(): this;
    withHtmlAnimation(): this;
    withHtmlToCanvasHook(): this;
    withSubtitles(): this;
    withGif(): this;
    withShape(): this;
    getComponent(): IComponent;
}
export {};
